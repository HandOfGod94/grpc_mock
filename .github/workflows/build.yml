name: build

on:
  push:
    branches: ["main"]

env:
  ELIXIR_VERSION: 1.12.3
  OTP_VERSION: 23.3

jobs:
  deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            deps
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}
          restore-keys: ${{ runner.os }}-mix-
      - name: install and compile dependencies
        run: |
          mix do deps.get, deps.compile
          MIX_ENV=test mix do deps.get, deps.compile

  lint:
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            deps
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Run style checks
        run: |
          mix format --check-formatted
          mix credo
  assets:
    runs-on: ubuntu-latest
    needs: deps
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - uses: actions/cache@v2
        with:
          path: |
            deps
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}
          restore-keys: ${{ runner.os }}-mix-
      - name: compile assets
        run: mix assets.deploy

  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      MIX_ENV: test
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: install protobuf compiler
        run: |
          sudo apt-get update -y && sudo apt-get install -y protobuf-compiler
          mix escript.install hex protobuf --force
          echo "/home/runner/.mix/escripts" >> $GITHUB_PATH
      - name: CI Build Cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Run tests
        run: mix coveralls.github

  dialyzer:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ env.ELIXIR_VERSION }}
          otp-version: ${{ env.OTP_VERSION }}
      - name: CI Build Cache
        uses: actions/cache@v2
        with:
          path: |
            deps
            priv/plts
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Run dialyzer
        run: mix dialyzer
